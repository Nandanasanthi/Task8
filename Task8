-- Step 1: Create Database and Use It
CREATE DATABASE ProcedureFunctionDB;
USE ProcedureFunctionDB;

-- Step 2: Create Table for Demo
CREATE TABLE Orders (
    order_id INT PRIMARY KEY AUTO_INCREMENT,
    customer_name VARCHAR(100),
    amount DECIMAL(10, 2),
    order_date DATE
);

-- Step 3: Insert Sample Data
INSERT INTO Orders (customer_name, amount, order_date) VALUES
('John Doe', 500.00, '2025-07-01'),
('Jane Smith', 1200.00, '2025-07-02'),
('Mike Johnson', 800.00, '2025-07-03');

-- Step 4: Stored Procedure – Display orders above a certain amount
DELIMITER //
CREATE PROCEDURE GetHighValueOrders(IN minAmount DECIMAL(10,2))
BEGIN
    SELECT * FROM Orders WHERE amount >= minAmount;
END;
//
DELIMITER ;

-- Call the Procedure
CALL GetHighValueOrders(900.00);

-- Step 5: Function – Calculate total order value for a specific customer
DELIMITER //
CREATE FUNCTION GetTotalSpent(name VARCHAR(100))
RETURNS DECIMAL(10,2)
DETERMINISTIC
BEGIN
    DECLARE total DECIMAL(10,2);
    SELECT SUM(amount) INTO total FROM Orders WHERE customer_name = name;
    RETURN total;
END;
//
DELIMITER ;

-- Use the Function
SELECT GetTotalSpent('Jane Smith') AS TotalSpent;

-- Optional: Drop the procedure/function if needed
-- DROP PROCEDURE GetHighValueOrders;
-- DROP FUNCTION GetTotalSpent;
